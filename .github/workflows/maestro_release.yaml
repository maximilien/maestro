name: Maestro Release

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install uv and activate the environment
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
      - name: Install dependencies
        run: |
          uv sync --all-extras
      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/src
          uv run pytest -v

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      release_name: ${{ steps.get_name.outputs.release_name }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install uv and activate the environment
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: True
      - name: Install dependencies
        run: |
          uv pip install requests
      - name: Get release name
        id: get_name
        run: |
          uv run env \
            GITHUB_OUTPUT="$GITHUB_OUTPUT" \
            GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            GITHUB_REPOSITORY="${{ github.repository }}" \
            python tools/get_release_name.py
      - name: Build Maestro
        run: uv build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: maestro-dist
          path: dist/*

  verify:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: AI4quantum/maestro-demos
      - uses: actions/download-artifact@v4
        with:
          name: maestro-dist
          path: dist
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install maestro
        run: pip install dist/*.whl
      - name: Test distribution
        run: maestro run workflows/simple/agents.yaml workflows/simple/workflow.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ github.actor }}

  release:
    needs: [build, verify]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: maestro-dist
          path: dist
      - name: GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: dist/*
          generate_release_notes: true
          name: ${{ needs.build.outputs.release_name }}

  followup-pr:
    needs: [build, release]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: run bump_version.py
        run: |
          python tools/bump_version.py
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
          RELEASE_NAME: ${{ needs.build.outputs.release_name }}
      - name: Create pull request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: follow-up after release ${{ github.ref_name }}"
          branch: followup-${{ github.ref_name }}-${{ github.run_id }}
          base: main
          title: "chore: follow-up after release ${{ github.ref_name }}"
          body: |
            This PR was automatically created after tagging `${{ github.ref_name }}` to:
            - Mark the release name as used
            - Set README.md to point to version `${{ github.ref_name }}`
            - Bump `pyproject.toml` and `Dockerfile` to next development version