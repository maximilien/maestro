#ARG MICRO_IMAGE_DIR=/ubi-micro-img

# BASE image using UBI 9 micro where the
# application and requirements will be installed
#FROM registry.access.redhat.com/ubi9-micro:9.4-15 AS base

# BUILD image using UBI 9 where the dependencies that
# require installing with a package manager will be installed
#FROM registry.access.redhat.com/ubi9:9.4-1214.1726694543 AS build
#ARG MICRO_IMAGE_DIR

# Copy the BASE image into the BUILD image
#RUN mkdir ${MICRO_IMAGE_DIR}
#COPY --from=base / ${MICRO_IMAGE_DIR}

# Install Python inside the BASE image
#RUN dnf install --installroot ${MICRO_IMAGE_DIR} --nodocs -y \
#    python3.11-3.11.9 \
#    python3.11-devel-3.11.9 \
#    libstdc++ &&\
#    dnf upgrade --installroot ${MICRO_IMAGE_DIR} --nodocs -y && \
#    dnf clean all --installroot ${MICRO_IMAGE_DIR}

# APP image from `scratch` which will be the final image
# and remaining application requirements will be installed
#FROM scratch AS app
#ARG MICRO_IMAGE_DIR
#COPY --from=build ${MICRO_IMAGE_DIR}/ .

# create symlinks for python
#RUN ln -s /usr/bin/python3.11 /usr/bin/python

# Create project dir
FROM python:3.11-slim
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install pip and dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Install dependencies
RUN pip3 install --no-cache-dir --upgrade \
    openai \
    pyyaml \
    python-dotenv \
    requests \
    flask \
    jsonschema \
    docopt-ng \
    langchain-community \
    streamlit \
    streamlit-mermaid \
    psutil \
    openai-agents \
    opik \
    pycron \
    beeai-framework \
    slack_sdk \
    nest-asyncio \
    pydantic-ai \
    logfire \
    litellm \
    dspy \
    ddgs    

COPY ./src ./src
COPY ./operator/entrypoint_api.sh .
COPY ./operator/api.py ./src/api.py
COPY ./deployments/maestro.html ./src/templates/index.html

RUN chown -R 1000:100 /usr/src/app &&\
    mkdir /usr/src/app/src/media && chown 1000:100 /usr/src/app/src/media

EXPOSE 5000
USER 1000:100
ENTRYPOINT ["/usr/src/app/entrypoint_api.sh"]
