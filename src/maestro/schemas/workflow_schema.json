{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/AI4quantum/maestro/src/maestro/schemas/workflow_schema.json",
  "title": "Maestro Workflow",
  "description": "A schema for defining Maestro workflows in YAML or JSON",
  "type": "object",
  "properties": {
    "metadata": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "maestro/v1"
        },
        "kind": {
          "type": "string",
          "description": "Workflow"
        },
        "name": {
          "type": "string",
          "description": "workflow name"
        },
        "labels": {
          "type": "object",
          "description": "workflow labels, key: value pairs"
        }
      },
      "required": ["name"]
    },
    "spec": {
      "type": "object",
      "properties": {
        "template": {
          "type": "object",
          "properties": {
            "metadata": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "workflow name"
                },
                "labels": {
                  "type": "object",
                  "description": "workflow labels, key: value pairs"
                }
              }
            },
            "event": {
              "type": "object",
              "properties": {
                "cron": {
                  "type": "string",
                  "description": "The cron job in standard cron format"
                },
                "name": {
                  "type": "string",
                  "description": "the event name"
                },
                "agent": {
                  "type": "string",
                  "description": "the agent name to invoke"
                },
                "steps": {
                  "type": "array",
                  "description": "The sequence of step names to execute"
                },
                "exit": {
                  "type": "string",
                  "description": "The exit condition"
                }
              }
            },
            "agents": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "workflows": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "name of workflow"
                  },
                  "url": {
                    "type": "string",
                    "description": "url of remote workflow"
                  }
                }
              }
            },
            "exception": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "exception name"
                },
                "agent": {
                  "type": "string",
                  "description": "the agent for this exception"
                }
              }
            },
            "prompt": {
              "type": "string"
            },
            "steps": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "step name"
                  },
                  "agent": {
                    "type": "string",
                    "description": "the agent for this step"
                  },
                  "workflow": {
                    "type": "string",
                    "description": "the workflow for this step"
                  },
                  "inputs": {
                    "type": "array",
                    "description": "Optional list of sources to feed into run()",
                    "items": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string",
                          "description": "variable name whose value becomes this argument"
                        }
                      },
                      "required": ["from"]
                    }
                  },
                  "context": {
                    "type": "array",
                    "description": "Optional array of literal strings or `{ from: stepName }` objects to pass as context",
                    "items": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "from": {
                              "type": "string"
                            }
                          },
                          "required": ["from"],
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "input": {
                    "type": "object",
                    "description": "user input",
                    "properties": {
                      "prompt": {
                        "type": "string",
                        "description": "input prompt string"
                      },
                      "template": {
                        "type": "string",
                        "description": "template string for next prompt, {prompt} and {response} are replaced"
                      }
                    }
                  },
                  "loop": {
                    "type": "object",
                    "description": "looping construct",
                    "properties": {
                      "agent": {
                        "type": "string"
                      },
                      "until": {
                        "type": "string"
                      }
                    }
                  },
                  "condition": {
                    "type": "array",
                    "description": "if/then/else or case/do/default condition",
                    "items": {
                      "type": "object",
                      "properties": {
                        "if": {
                          "type": "string"
                        },
                        "then": {
                          "type": "string"
                        },
                        "else": {
                          "type": "string"
                        },
                        "case": {
                          "type": "string"
                        },
                        "do": {
                          "type": "string"
                        },
                        "default": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "parallel": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "agent"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        }
      }
    }
  }
}
